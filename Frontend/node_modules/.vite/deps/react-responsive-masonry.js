import {
  require_prop_types
} from "./chunk-IEEFXWTP.js";
import {
  require_react
} from "./chunk-RLJ2RCJQ.js";
import {
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/react-responsive-masonry/es/Masonry/index.js
var import_prop_types = __toESM(require_prop_types());
var import_react = __toESM(require_react());
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
var Masonry = function(_React$Component) {
  _inheritsLoose(Masonry2, _React$Component);
  function Masonry2() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Masonry2.prototype;
  _proto.getColumns = function getColumns() {
    var _this$props = this.props, children = _this$props.children, columnsCount = _this$props.columnsCount;
    var columns = Array.from({
      length: columnsCount
    }, function() {
      return [];
    });
    var validIndex = 0;
    import_react.default.Children.forEach(children, function(child) {
      if (child && import_react.default.isValidElement(child)) {
        columns[validIndex % columnsCount].push(child);
        validIndex++;
      }
    });
    return columns;
  };
  _proto.renderColumns = function renderColumns() {
    var _this$props2 = this.props, gutter = _this$props2.gutter, itemTag = _this$props2.itemTag, itemStyle = _this$props2.itemStyle;
    return this.getColumns().map(function(column, i) {
      return import_react.default.createElement(itemTag, {
        key: i,
        style: _extends({
          display: "flex",
          flexDirection: "column",
          justifyContent: "flex-start",
          alignContent: "stretch",
          flex: 1,
          width: 0,
          gap: gutter
        }, itemStyle)
      }, column.map(function(item) {
        return item;
      }));
    });
  };
  _proto.render = function render() {
    var _this$props3 = this.props, gutter = _this$props3.gutter, className = _this$props3.className, style = _this$props3.style, containerTag = _this$props3.containerTag;
    return import_react.default.createElement(containerTag, {
      style: _extends({
        display: "flex",
        flexDirection: "row",
        justifyContent: "center",
        alignContent: "stretch",
        boxSizing: "border-box",
        width: "100%",
        gap: gutter
      }, style),
      className
    }, this.renderColumns());
  };
  return Masonry2;
}(import_react.default.Component);
Masonry.propTypes = true ? {
  children: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.node), import_prop_types.default.node]).isRequired,
  columnsCount: import_prop_types.default.number,
  gutter: import_prop_types.default.string,
  className: import_prop_types.default.string,
  style: import_prop_types.default.object,
  containerTag: import_prop_types.default.string,
  itemTag: import_prop_types.default.string,
  itemStyle: import_prop_types.default.object
} : {};
Masonry.defaultProps = {
  columnsCount: 3,
  gutter: "0",
  className: null,
  style: {},
  containerTag: "div",
  itemTag: "div",
  itemStyle: {}
};
var Masonry_default = Masonry;

// node_modules/react-responsive-masonry/es/ResponsiveMasonry/index.js
var import_react2 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());
var DEFAULT_COLUMNS_COUNT = 1;
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? import_react2.useLayoutEffect : import_react2.useEffect;
var useHasMounted = function useHasMounted2() {
  var _useState = (0, import_react2.useState)(false), hasMounted = _useState[0], setHasMounted = _useState[1];
  useIsomorphicLayoutEffect(function() {
    setHasMounted(true);
  }, []);
  return hasMounted;
};
var useWindowWidth = function useWindowWidth2() {
  var hasMounted = useHasMounted();
  var _useState2 = (0, import_react2.useState)(typeof window !== "undefined" ? window.innerWidth : 0), width = _useState2[0], setWidth = _useState2[1];
  var handleResize = (0, import_react2.useCallback)(function() {
    if (!hasMounted) return;
    setWidth(window.innerWidth);
  }, [hasMounted]);
  useIsomorphicLayoutEffect(function() {
    if (hasMounted) {
      window.addEventListener("resize", handleResize);
      handleResize();
      return function() {
        return window.removeEventListener("resize", handleResize);
      };
    }
  }, [hasMounted, handleResize]);
  return width;
};
var MasonryResponsive = function MasonryResponsive2(_ref) {
  var _ref$columnsCountBrea = _ref.columnsCountBreakPoints, columnsCountBreakPoints = _ref$columnsCountBrea === void 0 ? {
    350: 1,
    750: 2,
    900: 3
  } : _ref$columnsCountBrea, children = _ref.children, _ref$className = _ref.className, className = _ref$className === void 0 ? null : _ref$className, _ref$style = _ref.style, style = _ref$style === void 0 ? null : _ref$style;
  var windowWidth = useWindowWidth();
  var columnsCount = (0, import_react2.useMemo)(function() {
    var breakPoints = Object.keys(columnsCountBreakPoints).sort(function(a, b) {
      return a - b;
    });
    var count = breakPoints.length > 0 ? columnsCountBreakPoints[breakPoints[0]] : DEFAULT_COLUMNS_COUNT;
    breakPoints.forEach(function(breakPoint) {
      if (breakPoint < windowWidth) {
        count = columnsCountBreakPoints[breakPoint];
      }
    });
    return count;
  }, [windowWidth, columnsCountBreakPoints]);
  return import_react2.default.createElement("div", {
    className,
    style
  }, import_react2.default.Children.map(children, function(child, index) {
    return import_react2.default.cloneElement(child, {
      key: index,
      columnsCount
    });
  }));
};
MasonryResponsive.propTypes = true ? {
  children: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.node), import_prop_types2.default.node]).isRequired,
  columnsCountBreakPoints: import_prop_types2.default.object,
  className: import_prop_types2.default.string,
  style: import_prop_types2.default.object
} : {};
var ResponsiveMasonry_default = MasonryResponsive;

// node_modules/react-responsive-masonry/es/index.js
var es_default = Masonry_default;
export {
  ResponsiveMasonry_default as ResponsiveMasonry,
  es_default as default
};
//# sourceMappingURL=react-responsive-masonry.js.map
